name: NPM Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.3.18)'
        required: true
        type: string

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true
        
      - name: Run type checking
        run: npm run type-check
        
      - name: Run tests
        run: npm test
        
      - name: Build project
        run: npm run build
        
      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la dist/
          if [ ! -f dist/index.js ]; then
            echo "Error: dist/index.js not found"
            exit 1
          fi
          if [ ! -f dist/index.js.map ]; then
            echo "Error: dist/index.js.map not found"
            exit 1
          fi
          echo "Build output verified ✓"
          
      - name: Generate build checksums
        run: |
          echo "Generating SHA256 checksums..."
          sha256sum dist/* > dist/checksums.sha256
          cat dist/checksums.sha256
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            package.json
            package-lock.json
            README.md
            LICENSE
            CHANGELOG.md
            bin/
            
  publish:
    name: Publish to NPM
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: npm-production
    
    permissions:
      contents: write
      id-token: write  # Required for npm provenance
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          
      - name: Install dependencies
        run: npm ci
        
      - name: Verify package version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG_VERSION="${{ github.event.inputs.version }}"
          fi
          
          echo "Package version: $PACKAGE_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) doesn't match tag version ($TAG_VERSION)"
            exit 1
          fi
          
      - name: Create npm package tarball
        run: npm pack --dry-run
        
      - name: Publish to NPM with provenance
        run: |
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Release ${{ github.ref }}
            
            ### Checksums
            ```
            $(cat dist/checksums.sha256)
            ```
            
            ### Installation
            ```bash
            npx vibe-log-cli@latest
            ```
            
            ### Verification
            You can verify the published package by:
            1. Viewing the source code at: https://github.com/vibe-log/vibe-log-cli
            2. Checking npm provenance: https://www.npmjs.com/package/vibe-log-cli
            3. Verifying checksums of the build artifacts
            
            See [CHANGELOG.md](https://github.com/vibe-log/vibe-log-cli/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          
  verify-publication:
    name: Verify NPM Publication
    needs: publish
    runs-on: ubuntu-latest
    
    steps:
      - name: Wait for NPM propagation
        run: sleep 30
        
      - name: Verify package is available
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Checking if vibe-log-cli@$PACKAGE_VERSION is available on NPM..."
          
          npm view vibe-log-cli@$PACKAGE_VERSION version
          
          if [ $? -eq 0 ]; then
            echo "✓ Package successfully published and available"
          else
            echo "✗ Package not found on NPM registry"
            exit 1
          fi
          
      - name: Test installation
        run: |
          npm install -g vibe-log-cli@latest
          vibe-log --version